/* (1) Which tracks appeared in the most playlists? How many playlists did they appear in? */

SELECT playlist_track.TrackId, tracks.name, COUNT(*) AS 'Number of Playlists'
FROM playlist_track
JOIN tracks
	ON playlist_track.TrackId = tracks.TrackId
GROUP BY 1
ORDER BY 3 DESC;


/* (2) Which track generated the most revenue? Which album? Which genre?*/ 

--Track 

SELECT invoice_items.TrackId, tracks.name AS 'Track Name', sum(invoice_items.UnitPrice) AS 'Track Sales'
FROM invoice_items
JOIN tracks
	ON invoice_items.TrackId = tracks.TrackId
GROUP BY 1
ORDER BY 3 DESC;

--Album 

SELECT tracks.AlbumId, albums.Title, SUM(invoice_items.UnitPrice) AS 'Album Sales'
FROM tracks
JOIN albums
	ON tracks.AlbumId = albums.AlbumId
JOIN invoice_items
	ON tracks.TrackId = invoice_items.TrackId
GROUP BY 2
ORDER BY 3 DESC;

--Genre

WITH track_total AS (
	SELECT invoice_items.TrackId as 'TrackID', SUM(invoice_items.UnitPrice) AS 'TrackRev' 
	FROM invoice_items 
	GROUP BY 1)
SELECT genres.GenreId, genres.Name, ROUND(SUM(track_total.TrackRev), 2) as 'GenreRev'
FROM tracks 
JOIN genres 
	ON tracks.GenreId = genres.GenreId 
JOIN track_total
	ON tracks.TrackId = track_total.TracksID
GROUP BY 1
ORDER BY 3 DESC;


/* (3) Which countries have the highest sales revenue? What percent of total revenue does each country make up? */

SELECT BillingCountry AS 'Country', SUM(Total) AS 'Total Country Revenue',  SUM(Total) / (SELECT SUM(Total) FROM invoices) * 100 AS 'Percentage of Total'
FROM invoices
GROUP BY 1
ORDER BY 2, 3 DESC;


/* (4) How many customers did each employee support, and what is the average revenue for each sale? */ 

WITH sales AS (
	SELECT invoices.CustomerId as 'Customer', SUM(invoices.Total) AS 'Customer_Total' 
	FROM invoices
	GROUP BY 1) 
SELECT employees.EmployeeId, employees.FirstName, employees.LastName, COUNT(customers.CustomerId) AS 'Customers per Employee', SUM(sales.Customer_Total) / COUNT (customers.customerId) AS 'Average Sales per Customer', SUM(sales.Customer_Total) AS 'Total Sales per Employee' 
FROM customers
	JOIN employees 
		ON customers.SupportRepId = employees.EmployeeId
	JOIN sales 
		ON customers.CustomerId = sales.Customer
GROUP BY 1
ORDER BY 4 DESC;


/* (5) Do longer or shorter length albums tend to generate more revenue? */

WITH song_sales AS (
	SELECT TrackId, SUM(UnitPrice) AS 'Total_Track_Sales'
	FROM invoice_items
	GROUP BY 1)
SELECT tracks.AlbumId, albums.Title, SUM(tracks.Milliseconds) AS 'Album Length', SUM(song_sales.Total_Track_Sales) AS 'Album Revenue'
FROM tracks
JOIN song_sales
	ON tracks.TrackId = song_sales.TrackId
JOIN albums
	ON tracks.AlbumId = albums.AlbumId
GROUP BY 1
ORDER BY 3 DESC;


/* (6) Is the number of times a track appear in any playlist a good indicator of sales? */ 

WITH playlists_per_song AS (
	SELECT TrackId, COUNT(*) AS 'Number_of_Playlists'
	FROM playlist_track
	GROUP BY 1) 
SELECT invoice_items.TrackId, tracks.Name, SUM(invoice_items.UnitPrice) AS 'Track Sales', playlists_per_song.Number_of_Playlists
FROM invoice_items
JOIN playlists_per_song
	ON invoice_items.TrackId = playlists_per_song.TrackId
JOIN tracks
	ON invoice_items.TrackId = tracks.TrackId
GROUP BY 1
ORDER BY 3, 4 DESC;


/* (7) How much revenue is generated each year, and what is its percent change from the previous year? */ 

WITH new_year AS (
	SELECT cast(strftime('%Y', invoices.InvoiceDate) as int) AS 'Year', SUM(Total) AS 'New_Yearly_Total'
	FROM invoices
	GROUP BY 1),
old_year AS (
	SELECT cast(strftime('%Y', invoices.InvoiceDate) as int) AS 'Year', SUM(Total) AS 'Old_Yearly_Total'
	FROM invoices
	GROUP BY 1)
SELECT new_year.Year AS 'Year', new_year.New_Yearly_Total AS 'Total Revenue', ifnull(ROUND((new_year.New_Yearly_Total - old_year.Old_Yearly_Total) / old_year.Old_Yearly_Total * 100, 2), 'N/A') AS 'YOY(%)'
FROM new_year
	LEFT JOIN old_year
		ON new_year.Year = old_year.Year + 1
GROUP BY 1;
